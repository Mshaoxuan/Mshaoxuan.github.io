[{"title":"Hello World","url":"/2025/05/17/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n"},{"title":"马少宣的第一篇博客","url":"/2025/05/18/%E9%A9%AC%E5%B0%91%E5%AE%A3/","content":"大家好, 我是马少宣! 专业：[物联网工程] 学号：[20231314—][点击进入]\n马少宣的个人简介个人信息\n身高： 1–cm\n体重： 63kg\n年龄： &lt;&#x3D;21周岁\n\n爱好\n无\n\n目标\n考研\n\n"},{"title":"Python学习笔记（点开有樱花哦~）","url":"/2025/05/20/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","content":"骗你的，这都信python笔记print(&quot;Hello World&quot;)&quot;&quot;&quot;本代码演示了：- 各类字面量的写法- 通过print语句输出各类字面量  &quot;&quot;&quot;# 写一个整数字面量666# 写一个浮点数字面量13.14# 写一个字符串字面量&quot;马&quot;# 通过print语句输出各类字面量print(666)print(13.14)print(&quot;马&quot;)money = 50print(&quot;钱包还有：&quot;,money)# 卖了个冰激凌，花费10元money = money - 10print(&quot;买了冰激凌花费10元，还剩余：&quot;,money,&quot;元&quot;)# 假设，每隔一小时，输出一下钱包的余额print(&quot;现在是下午1点，钱包余额是：&quot;,money,&quot;元&quot;)print(&quot;现在是下午2点，钱包余额是：&quot;,money,&quot;元&quot;)print(&quot;现在是下午3点，钱包余额是：&quot;,money,&quot;元&quot;)print(&quot;现在是下午4点，钱包余额是：&quot;,money,&quot;元&quot;)money = 50print(&quot;钱包余额为：&quot;,money)# 花费10元买冰激凌money = money - 10print(&quot;剩余：&quot;,money)# 花费5元买可乐money = money - 5print(&quot;剩余：&quot;,money)# 方式1 使用print直接输出类型信息print(type(&quot;马&quot;))print(type(666))print(type(13.14))# 方式2 使用变量存储type()语句的结果string_type = type(&quot;马&quot;)int_type = type(666)float_type = type(13.14)print(string_type)print(int_type)print(float_type)# 方式3 使用type()语句，查看变量中存储的数据类型信息name = &quot;马&quot;name_type = type(name)print(name_type)# 将数字类型转换成字符串num_str = str(11)print(type(num_str),num_str)float_str = str(13.14)print(type(float_str),float_str)# 将字符串装换成数字num = int(&quot;11&quot;)print(type(num),num)num2 = float(&quot;13.14&quot;)print(type(num2),num2)# 错误示例，想要将字符串转换成数字，必须要求字符创内的内容都是数字# num3 = int(&quot;马&quot;)# print(type(num3),num3)# 整数转浮点数num4 = float(11)print(type(num4),num4)# 浮点数装换成整数int_num = int(13.14)print(type(int_num),int_num)# 规则一：内容限定，限定只能使用：中文，英文，数字，下划线 注意：不能数字开头# 错误：1_name = &quot;张三&quot;# 错误：name_! = &quot;张三&quot;name_ = &quot;张三&quot;_name = &quot;张三&quot;name_1 = &quot;张三&quot;# 规则2：大小写敏感Itheima = &quot;马&quot;itheima = 666print(Itheima)print(itheima)# 规则3：不可使用关键字# 错误：class = 1# 错误：def = 1Class = 1&quot;&quot;&quot;演示Python中的各种运算符&quot;&quot;&quot;# 算数运算符print(&quot;1 + 1 =&quot;,1 + 1)print(&quot;2 - 1 =&quot;,2 - 1)print(&quot;3 * 3 =&quot;,3 * 3)print(&quot;4 / 2 =&quot;,4 / 2)print(&quot;11 // 2 =&quot;,11 // 2)print(&quot;9 % 2 =&quot;,9 % 2)print(&quot;2 ** 2 =&quot;,2 ** 2)# 赋值运算符num = 1 + 2 * 3# 复合赋值运算符num = 1num += 1print(&quot;num += 1:&quot;,num)num -= 1print(&quot;num -= 1:&quot;,num)num *= 1print(&quot;num *= 1:&quot;,num)num /= 1print(&quot;num /= 1:&quot;,num)num = 3num %= 2print(&quot;num %= 2:&quot;,num)num **= 2print(&quot;num **= 2:&quot;,num)num = 9num //= 2print(&quot;num //= 2:&quot;,num)&quot;&quot;&quot; 演示字符串的三种定义方式：单引号定义法双引号定义法三引号定义法(使用变量接受它，它就是字符串)&quot;&quot;&quot;# 单引号定义法，使用单引号进行包围name = &#x27;马&#x27;print(type(name))# 双引号定义法name = &quot;马&quot;print(type(name))# 三引号定义法name = &quot;&quot;&quot;马&quot;&quot;&quot;print(type(name))# 在字符串内 包含双引号name = &#x27;&quot;马&quot;&#x27;print(name)# 在字符串内 包含单引号name = &quot;&#x27;马&#x27;&quot;print(name)# 使用转义字符\\ 解除引号的效用name = &quot;\\&quot;马\\&quot;&quot;print(name)name = &#x27;\\&#x27;马\\&#x27;&#x27;print(name)# 字符串字面量之间的拼接print(&quot;马&quot; + &quot;少宣&quot;)# 字符串字面量和字符串变量的拼接name = &quot;额&quot;address = &quot;癔症蛋&quot;print(&quot;我是：&quot; + name + &quot;，我是&quot; + address)#通过占位的形式，完成拼接name = &quot;马&quot;massage = &quot;少宣%s&quot; % nameprint(massage)#通过占位的形式，完成数字和字符串的拼接class_num = 57avg_salary = 16781massage = &quot;python大数据学科，北京%s期，毕业平均工资：%s&quot; % (class_num, avg_salary)print(massage)name = &quot;传智播客&quot;setup_year = 2006stock_price = 19.99massage = &quot;%s,成立于:%d,我今天的股价是：%f&quot; % (name,setup_year,stock_price)print(massage)num1 = 11num2 = 11.345print(&quot;数字11的宽度限制为5，结果是：%5d&quot; % num1)print(&quot;数字11的宽度限制为1，结果是：%1d&quot; % num1)print(&quot;数字11.345的宽度限制为7，小数精度是2，结果是：%7.2f&quot; % num2)print(&quot;数字11的宽度不限制，小数精度是2，结果是：% .2f&quot; % num2)# 演示第二种字符串格式化的方式：f&quot;&#123;占位&#125;name = &quot;传智播客&quot;setup_year = 2006stock_price = 19.99print(f&quot;我是&#123;name&#125;,我成立于：&#123;setup_year&#125;，我今天的股价是：&#123;stock_price&#125;&quot;)# 演示对表达式进行字符串格式化print(&quot;1 + 1 的结果是：%d&quot; % (1 + 1))print(f&quot;1 * 2 的结果是：&#123;1 * 2&#125;&quot;)print(&quot;字符串在Python中的类型名是：%s&quot; % type(&quot;字符串&quot;))# 股价计算小程序name = &quot;传智播客&quot;stock_price = 19.99stock_code = &quot;003032&quot;stock_price_daily_growth_factor = 1.2growth_days = 7finally_stock_price = stock_price * stock_price_daily_growth_factor ** growth_daysprint(f&quot;公司：&#123;name&#125;，股票代码：&#123;stock_code&#125;，当前股价：&#123;stock_price&#125;&quot;)print(&quot;每日增长系数%.1f，经过%d天的增长后，股价达到了：%.2f&quot; % (stock_price_daily_growth_factor,growth_days,finally_stock_price))&quot;&quot;&quot;# 演示Python中的input语句，&quot;请告诉我你是谁&quot;可以写到input里面print(&quot;请告诉我你是谁&quot;)name = input()print(&quot;我知道了，你是：%s&quot; % name)# 输入数字类型num = input(&quot;请告诉我你的年龄：&quot;)num = int(num)print(&quot;类型：&quot;,type(num))&quot;&quot;&quot;# 演示布尔类型的定义以及比较运算符的应用bool_1 = Truebool_2 = Falseprint(f&quot;bool_1 = &#123;bool_1&#125;,类型是&#123;type(bool_1)&#125;&quot;)print(f&quot;bool_2 = &#123;bool_2&#125;,类型是&#123;type(bool_2)&#125;&quot;)# 比较运算符的使用# == != &gt; &lt; &gt;= &lt;=# 演示进行内容的相对比较num1 = 10num2 = 10print(f&quot;10 = 10的结果是：&#123;num1 == num2&#125;&quot;)num1 = 10num2 = 15print(f&quot;10 != 15的结果是：&#123;num1 != num2&#125;&quot;)name1 = &quot;itacst&quot;name2 = &quot;itheima&quot;print(f&quot;itcast == itheima 结果是：&#123;name1 == name2&#125;&quot;)# 演示大于小于，大于等于小于等于的比较运算num1 = 10num2 = 5print(f&quot;10 &gt; 5结果是：&#123;num1 &gt; num2&#125;&quot;)print(f&quot;10 &lt; 5结果是：&#123;num1 &lt; num2&#125;&quot;)num1 = 10num2 = 11print(f&quot;10 &gt;= 11结果是：&#123;num1 &gt;= num2&#125;&quot;)print(f&quot;10 &lt;= 11结果是：&#123;num1 &lt;= num2&#125;&quot;)#python判断语句：if语句的基本格式应用age = 20if age &gt;= 18:print(&quot;我已经成年了&quot;)print(&quot;已经步入大学生活&quot;)print(&quot;时间过得真快&quot;)&quot;&quot;&quot;# 练习成年人判断age = input(&quot;请输入你的年龄:&quot;)age = int(age)if age &gt;= 18:print(&quot;您已成年需要买票10元&quot;)print(&quot;祝您游玩愉快&quot;)&quot;&quot;&quot;&quot;&quot;&quot;# if else 语句age = int(input(&quot;请输入你的年龄：&quot;))if age &gt;= 18:print(&quot;您已成年，需要买票10元&quot;)else:print(&quot;您未成年，祝您游玩愉快&quot;)&quot;&quot;&quot;&quot;&quot;&quot;# 练习我要买票吗height = int(input(&quot;请输入你的身高：&quot;))if height &gt; 120:print(&quot;您的身高超过120cm，需要买票10元&quot;)else:print(&quot;你的身高低于120cm，可以免费游玩&quot;)print(&quot;猪您啊&quot;)&quot;&quot;&quot;&quot;&quot;&quot;# 演示if elif elseheight = int(input(&quot;请输入你的身高：&quot;))vip_level = int(input(&quot;请输入你的vip等级：&quot;))if height &lt; 120:print(&quot;可以免费&quot;)elif vip_level &gt; 3:print(&quot;可以免费&quot;)else:print(&quot;都不满足，需要买票10元&quot;)print(&quot;猪你愉快&quot;)&quot;&quot;&quot;&quot;&quot;&quot;#练习猜猜心里数字num = 5if int(input(&quot;请猜一个数字&quot;)) == num:print(&quot;第一次猜对&quot;)elif int(input(&quot;猜错了，再来一次：&quot;)) == num:print(&quot;猜对了&quot;)elif int(input(&quot;猜错了，再来一次：&quot;)) == num:print(&quot;最后一次机会猜对了&quot;)else:print(&quot;sorry猜错了&quot;)&quot;&quot;&quot;&quot;&quot;&quot;# 嵌套if int(input(&quot;你的身高：&quot;)) &gt; 120:print(&quot;身高限制，不可免费&quot;)print(&quot;如果你的VIP大于3可以免费&quot;)if int(input(&quot;你的VIP等级：&quot;)) &gt; 3:print(&quot;可以免费&quot;)else:print(&quot;买票&quot;)else:print(&quot;欢迎游玩&quot;)&quot;&quot;&quot;&quot;&quot;&quot;# 定义一个随机数字，猜import randomnum = random.randint(1,10)guess_num = int(input(&quot;输入你要猜的数字：&quot;))if guess_num == num:print(&quot;正确&quot;)else:if guess_num &gt; num:print(&quot;大&quot;)else:print(&quot;小&quot;)guess_num = int(input(&quot;再次输入你要猜的数字：&quot;))if guess_num == num:print(&quot;第二次正确&quot;)else:if guess_num &gt; num:print(&quot;大&quot;)else:print(&quot;小&quot;)guess_num = int(input(&quot;第三次输入你要猜的数字：&quot;))if guess_num == num:print(&quot;第三次正确&quot;)else:print(&quot;机会用完&quot;)&quot;&quot;&quot;# while循环i = 0while i &lt; 100:print(&quot;我喜欢你&quot;)i += 1# 求1到100的和i = 1sum = 0while i &lt;= 100:sum += ii += 1print(f&quot;1-100累加的和:&#123;sum&#125;&quot;)&quot;&quot;&quot;# 一个1-100随机数，通过while循环，猜，并求猜了几次import randomnum = random.randint(1,100)count = 0flag = Truewhile flag:guess_num = int(input(&quot;请输入猜测的数字：&quot;))count += 1if guess_num == num:print(&quot;猜中了&quot;)flag = Falseelse:if guess_num &gt; num:print(&quot;大&quot;)else:print(&quot;小&quot;)print(f&quot;一共猜测了&#123;count&#125;次&quot;)&quot;&quot;&quot;# while循环的嵌套i = 1while i &lt;= 100:print(f&quot;今天是第&#123;i&#125;天，准备表白&quot;)j = 1while j &lt;= 10:print(f&quot;送给她&#123;j&#125;朵玫瑰&quot;)j += 1print(&quot;我喜欢你&quot;)i += 1print(f&quot;坚持到第&#123;i - 1&#125;天，表白成功&quot;)#在同一行#print(&quot;hello&quot;,end=&#x27;&#x27;)#print(&quot;world&quot;,end=&#x27;&#x27;)#对其#print(&quot;hello\\tworld&quot;)#print(&quot;itheima\\tbest&quot;)#练习while输出99乘法表i = 1while i &lt;= 9:j = 1while j &lt;= i:print(f&quot;&#123;j&#125; * &#123;i&#125; = &#123;j * i&#125;\\t&quot;,end=&#x27;&#x27;)j += 1i += 1print()name = &quot;mashaoxuan&quot;for x in name:print(x)# 练习数一数有几个aname = &quot;mashaoxuan&quot;count = 0for x in name:if x == &quot;a&quot;:count += 1print(f&quot;共有&#123;count&#125;个a&quot;)# range语法一 range(num)for x in range (5):print(&quot;送玫瑰&quot;)# range语法二 range(num1，num2)for x in range (5,10):print(x)# range语法三 range(num1，num2，step)for x in range(5,10,2):print(x)#for循环临时变量的作用域i = 0   #规范for i in range (5):print(i)print(i)# for循环的嵌套for i in range (1,101):print(f&quot;今天是表白的第&#123;i&#125;天&quot;)for j in range (1,11):print(f&quot;送给她的第&#123;j&#125;朵玫瑰&quot;)print(&quot;我喜欢你&quot;)print(&quot;第一百天，表白成功&quot;)#for循环99乘法表for i in range(1,10):for j in range(1,i + 1):print(f&quot;&#123;j&#125; * &#123;i&#125; = &#123;i * j&#125;\\t&quot;,end = &#x27;&#x27;)print()# 演示循环语句的中断控制：break和continue# continue，结束本次循环continue以下的语句for i in range(1,6):print(&quot;灰太狼&quot;)for j in range(1,3):print(&quot;红太狼&quot;)continueprint(&quot;哄她爱了&quot;)print(&quot;爱了&quot;)# break，直接结束循环for i in range(1,6):print(&quot;喜洋洋&quot;)breakprint(&quot;美羊羊&quot;)print(&quot;沸羊羊&quot;)# 发工资money = 10000for i in range(1,21):import randomscore = random.randint(1,10)if score &lt; 5:print(f&quot;员工&#123;i&#125;绩效分&#123;score&#125;不足，不发工资&quot;)continueif money &gt;= 1000:money -= 1000print(f&quot;员工&#123;i&#125;，发工资1000，账户余额：&#123;money&#125;&quot;)else:print(f&quot;余额不足，当前&#123;money&#125;&quot;)break# 用函数统计字符串长度str1 = &quot;ma&quot;str2 = &quot;shao&quot;str3 = &quot;xuan&quot;def my_len(data):count = 0for i in data:count += 1print(f&quot;字符串&#123;data&#125;的长度是&#123;count&#125;&quot;)my_len(str1)my_len(str2)my_len(str3)# 定义一个函数，输出相关信息def say_hi():   #第二步执行print(&quot;hello world&quot;)say_hi()    # 第一步执行# 定义函数def check():print(&quot;hello world\\n你好&quot;)# 调用函数check()def add(x,y):result = x + yprint(f&quot;&#123;x&#125; + &#123;y&#125; = &#123;result&#125;&quot;)add(5,6)def add(a,b):result = a + breturn resultr = add(5,6)print(r)# 无return语句的函数返回值def say_hi():print(&quot;hello world&quot;)result = say_hi()print(f&quot;无返回值函数，返回的内容是：&#123;result&#125;&quot;)print(f&quot;无返回值函数，返回的内容类型是：&#123;type(result)&#125;&quot;)def say_hi2():print(&quot;hello world&quot;)return Noneresult = say_hi2()print(f&quot;无返回值函数，返回的内容是：&#123;result&#125;&quot;)print(f&quot;无返回值函数，返回的内容类型是：&#123;type(result)&#125;&quot;)# None用于if判断def check_age(age):if age &gt;= 18:return &quot;SUCCESS&quot;else:return Noneresult = check_age(16)if not result:print(&quot;未成年，不可进入&quot;)# 定义函数，进行文档说明def add(x,y):&quot;&quot;&quot;三个引号，然后回车:param x::param y::return:&quot;&quot;&quot;result = x + yprint(f&quot;结果是 = &#123;result&#125;&quot;)return resultadd(5,6)# 函数的嵌套调用def func_b():print(&quot;2&quot;)def func_a():print(&quot;1&quot;)func_b()print(&quot;3&quot;)func_a()# 局部变量def func_a():num = 100print(num)func_a()#使用print(num)无法执行# 全局变量num = 200def test_a():print(f&quot;test_a:&#123;num&#125;&quot;)test_a()print(num)# 在函数内修改全局变量num = 200def test_a():print(f&quot;test_a:&#123;num&#125;&quot;)def test_b():num = 500print(f&quot;test_b:&#123;num&#125;&quot;)test_a()test_b()print(num)# global关键字，在函数内声明变量为全局变量num = 200def test_a():print(f&quot;test_a:&#123;num&#125;&quot;)def test_b():global numnum = 500print(f&quot;test_b:&#123;num&#125;&quot;)test_a()test_b()print(num)&quot;&quot;&quot;# 案例money = 5000000name = Nonename = input(&quot;请输入你的姓名：&quot;)def query(show_header):if show_header:print(&quot;查询余额&quot;)print(f&quot;&#123;name&#125;,余额&#123;money&#125;&quot;)def saving(num):global moneymoney += numprint(&quot;存款&quot;)print(f&quot;&#123;name&#125;,存款&#123;num&#125;&quot;)query(False)def get_money(num):global moneymoney -= numprint(&quot;取款&quot;)print(f&quot;&#123;name&#125;,取款&#123;num&#125;&quot;)query(False)def main():print(&quot;主菜单&quot;)print(f&quot;&#123;name&#125;&quot;)print(&quot;查询余额\\t[1]&quot;)print(&quot;存款\\t\\t[2]&quot;)print(&quot;取款\\t\\t[3]&quot;)print(&quot;退出\\t\\t[4]&quot;)return input(&quot;选择：&quot;)while True:keyboard_input = main()if keyboard_input == &quot;1&quot;:query(True)continueelif keyboard_input == &quot;2&quot;:num = int(input(&quot;存入：&quot;))saving(sum)continueelif keyboard_input == &quot;3&quot;:num = int(input(&quot;取走：&quot;))get_money(sum)continueelse:print(&quot;退出&quot;)break&quot;&quot;&quot;# 列表list定义和下标索引name_list = [&quot;m&quot;,6,True]print(name_list)print(type(name_list))print(name_list[1])     # 6print(name_list[-1])    # Truemy_list = [[1, 2, 3],[4, 5, 6]]print(my_list)print(type(my_list))print(my_list[1][0])       # 4# 查找下表索引值mylist = [&quot;m&quot;,&quot;s&quot;,&quot;x&quot;]index = mylist.index(&quot;s&quot;)print(f&quot;s下标索引值：&#123;index&#125;&quot;)# 修改下标索引值mylist[0] = &quot;马&quot;print(f&quot;修改后：&#123;mylist&#125;&quot;)# 插入元素mylist.insert(1,&quot;少&quot;)print(f&quot;插入后：&#123;mylist&#125;&quot;)# 追加元素mylist.append(&quot;宣&quot;)print(f&quot;追加后：&#123;mylist&#125;&quot;)# 追加方法2mylist2 = [1,2,3]mylist.extend(mylist2)print(f&quot;追加后：&#123;mylist&#125;&quot;)# 删除指定下标mylist = [4,5,6]del mylist[2]print(f&quot;删除后：&#123;mylist&#125;&quot;)# 删除方法2mylist = [4,5,6]element = mylist.pop(2)print(f&quot;通过pop方法取出后：&#123;mylist&#125;,取出：&#123;element&#125;&quot;)# 删除某元素在列表mylist = [4,4,5,6]mylist.remove(4)        # 删除第一个4print(f&quot;通过remove方法移除元素：&#123;mylist&#125;&quot;)# 清空列表mylist = [4,5,6]mylist.clear()print(f&quot;清空后：&#123;mylist&#125;&quot;)# 统计某元素在列表中的数量mylist = [4,4,5,6]count = mylist.count(4)print(f&quot;4的数量是：&#123;count&#125;&quot;)# 统计列表内全部元素的数量mylist = [4,4,5,6]count = len(mylist)print(f&quot;全部元素数量：&#123;count&#125;&quot;)# 用while循环遍历列表list的演示函数def list_while_func():mylist = [1,2,3]index = 0while index &lt; len(mylist):element = mylist[index]print(f&quot;列表的元素：&#123;element&#125;&quot;)index += 1list_while_func()# 用for循环遍历列表list的演示函数def list_for_func():mylist = [1,2,3]for element in mylist:print(f&quot;列表的元素有：&#123;element&#125;&quot;)list_for_func()# 定义元组t1 = (1,&quot;m&quot;,True)t2 = ()t3 = tuple()print(f&quot;t1的类型是：&#123;type(t1)&#125;,内容是：&#123;t1&#125;&quot;)print(f&quot;t2的类型是：&#123;type(t2)&#125;,内容是：&#123;t2&#125;&quot;)print(f&quot;t3的类型是：&#123;type(t3)&#125;,内容是：&#123;t3&#125;&quot;)# 定义单个元素的元组t4 = (&quot;m&quot;,)print(f&quot;t4的类型是：&#123;type(t4)&#125;,内容是：&#123;t4&#125;&quot;)# 元组的嵌套t5 = ((1,2,3),(4,5,6))print(f&quot;t5的类型是：&#123;type(t5)&#125;,内容是：&#123;t5&#125;&quot;)# 下标索引取出内容num = t5[1][2]print(f&quot;取出元素：&#123;num&#125;&quot;)# 元组的操作：index查找元素方法t6 = (&quot;m&quot;,&quot;s&quot;,&quot;x&quot;)index = t6.index(&quot;s&quot;)print(f&quot;s的下标：&#123;index&#125;&quot;)# 元组的count统计方法t7 = (&quot;m&quot;,&quot;m&quot;,&quot;s&quot;,&quot;x&quot;)num = t7.count(&quot;m&quot;)print(f&quot;m个数：&#123;num&#125;&quot;)# 元组len函数统计玉足元素的个数t8 = (&quot;m&quot;,&quot;m&quot;,&quot;s&quot;,&quot;x&quot;)num = len(t8)print(f&quot;元素个数：&#123;num&#125;&quot;)# 元组的遍历whileindex = 0while index &lt; len(t8):print(t8[index])index += 1# for元组遍历for element in t8:print(f&quot;元组的元素：&#123;element&#125;&quot;)# 定义一个元组t9 = (&quot;m&quot;,&quot;m&quot;,&quot;s&quot;,&quot;x&quot;,[&quot;ma&quot;,&quot;shao&quot;])print(t9)t9[4][0] = &quot;xuan&quot;print(f&quot;t9的内容：&#123;t9&#125;&quot;)# 数据容器，字符串,不可修改mystr = &quot;ma shao xuan&quot;# 通过下标索引取值value = mystr[2]value2 = mystr[-1]print(f&quot;从字符串&#123;mystr&#125;去下标为2的元素&#123;value&#125;，下标为-1的元素&#123;value2&#125;&quot;)# index方法value = mystr.index(&quot;shao&quot;)print(f&quot;在字符串&#123;mystr&#125;中查找shao，起始下标：&#123;value&#125;&quot;)# replacenewstr = mystr.replace(&quot;shao&quot;,&quot;少&quot;)print(newstr)# split方法，分割mystr = &quot;ma shao xuan&quot;mystrlist = mystr.split(&quot; &quot;)print(f&quot;将字符串&#123;mystr&#125;进行split切分后&#123;mystrlist&#125;，类型&#123;type(mystrlist)&#125;&quot;)# strip方法mystr = &quot;  ma shao xuan  &quot;mystrlist = mystr.strip()       # 去除首尾空格print(mystrlist)mystr = &quot;12ma shao xuan21&quot;newstr = mystr.strip(&quot;12&quot;)print(f&quot;字符串&#123;mystr&#125;被strip（&#x27;12&#x27;）后，结果：&#123;newstr&#125;&quot;)# 某字符出现次数mystr = &quot;ma shao&quot;count = mystr.count(&quot;m&quot;)print(count)# 字符串长度num = len(mystr)print(num)# 练习mystr = &quot;itma shaoit&quot;num = mystr.count(&quot;it&quot;)print(f&quot;&#123;mystr&#125;,中有it&#123;num&#125;个&quot;)newstr = mystr.replace(&quot; &quot;,&quot;|&quot;)print(newstr)mystrlist = newstr.split(&quot;|&quot;)print(mystrlist)# 队list切片mylist = [1,2,3,4,5,6,7,8,9]result1 = mylist[1:4]print(result1)# 对tuple切片mytuple = (1,2,3,4,5,6,7,8,9)result2 = mytuple[:]print(result2)# 对str切片mystr = (&quot;01234567&quot;)result3 = mystr[::2]print(result3)# 对str切片mystr = (&quot;01234567&quot;)result4 = mystr[::-1]print(result4)# 对列表切片mylist = [1,2,3,4,5,6,7,8,9]result5 = mylist[3:1:-1]print(result5)# 对元组切片mytuple = (1,2,3,4,5,6,7,8,9)result6 = mytuple[::-2]print(result6)# 定义集合myset = &#123;&quot;ma&quot;,&quot;shao&quot;,&quot;xuan&quot;,&quot;ma&quot;,&quot;shao&quot;,&quot;xuan&quot;,&quot;ma&quot;,&quot;shao&quot;,&quot;xuan&quot;&#125;myset2 = set()print(f&quot;myset的内容：&#123;myset&#125;，类型是：&#123;type(myset)&#125;&quot;)print(f&quot;myset2的内容：&#123;myset2&#125;，类型是：&#123;type(myset2)&#125;&quot;)# 添加新元素myset.add(&quot;python&quot;)myset.add(&quot;ma&quot;)print(f&quot;myset的内容：&#123;myset&#125;，类型是：&#123;type(myset)&#125;&quot;)# 移除元素myset .remove(&quot;python&quot;)print(f&quot;myset的内容：&#123;myset&#125;，类型是：&#123;type(myset)&#125;&quot;)# 随机取出一个元素myset = &#123;&quot;ma&quot;,&quot;shao&quot;,&quot;xuan&quot;&#125;element = myset.pop()print(f&quot;取出&#123;element&#125;,取出后：&#123;myset&#125;&quot;)# 清空clearmyset.clear()print(f&quot;清空后：&#123;myset&#125;&quot;)# 取俩个集合的差集set1 = &#123;1,2,3&#125;set2 = &#123;1,5,6&#125;set3 = set1.difference(set2)print(f&quot;取差集后：&#123;set3&#125;&quot;)print(f&quot;取差集后原有set1：&#123;set1&#125;&quot;)print(f&quot;取差集后原有set2：&#123;set2&#125;&quot;)# 消除俩个集合的差集set1 = &#123;1,2,3&#125;set2 = &#123;1,5,6&#125;set1.difference_update(set2)print(f&quot;消除差集后原有set1：&#123;set1&#125;&quot;)print(f&quot;消除差集后原有set2：&#123;set2&#125;&quot;)# 集合合并set1 = &#123;1,2,3&#125;set2 = &#123;1,5,6&#125;set3 = set1.union(set2)print(f&quot;2集合合并：&#123;set3&#125;&quot;)print(f&quot;合并后集合1：&#123;set1&#125;&quot;)print(f&quot;合并后集合2：&#123;set2&#125;&quot;)# 统计集合元素数量set1 = &#123;1,2,3,4,5,6&#125;num = len(set1)print(f&quot;集合中元素数量：&#123;num&#125;&quot;)# 集合的遍历不支持小标只能用for循环set1 = &#123;1,2,3,4,5,6&#125;for element in set1:print(element)# 字典定义my_dict1 = &#123;&quot;ma&quot;:99,&quot;shao&quot;:88,&quot;xuan&quot;:77&#125;my_dict2 = &#123;&#125;my_dict3 = dict()print(f&quot;字典一：&#123;my_dict1&#125;,类型：&#123;type(my_dict1)&#125;&quot;)print(f&quot;字典二：&#123;my_dict2&#125;,类型：&#123;type(my_dict2)&#125;&quot;)print(f&quot;字典三：&#123;my_dict3&#125;,类型：&#123;type(my_dict3)&#125;&quot;)# 定义重复key的字典# my_dict1 = &#123;&quot;ma&quot;:99,&quot;ma&quot;:88,&quot;xuan&quot;:77&#125;新的会把旧的重复# 从字典中基于key获得Valuemy_dict1 = &#123;&quot;ma&quot;:99,&quot;shao&quot;:88,&quot;xuan&quot;:77&#125;score = my_dict1[&quot;ma&quot;]print(f&quot;ma的分数：&#123;score&#125;&quot;)# 定义嵌套字典my_dict1 = &#123;&quot;ma&quot;:&#123;&quot;语文&quot;:77,&quot;数学&quot;:66,&quot;英语&quot;:33&#125;,&quot;shao&quot;:&#123;&quot;语文&quot;:88,&quot;数学&quot;:86,&quot;英语&quot;:55&#125;,&quot;xuan&quot;:&#123;&quot;语文&quot;:99,&quot;数学&quot;:86,&quot;英语&quot;:55&#125;&#125;print(f&quot;学生考试：&#123;my_dict1&#125;&quot;)# shao的语文信息score = my_dict1[&quot;shao&quot;][&quot;语文&quot;]print(f&quot;shao的语文：&#123;score&#125;&quot;)# 字典的常用操作my_dict = &#123;&quot;ma&quot;:99,&quot;shao&quot;:88,&quot;xuan&quot;:77&#125;my_dict[&quot;马&quot;] = 66print(f&quot;新增后：&#123;my_dict&#125;&quot;)# 更新元素my_dict[&quot;ma&quot;] = 33print(f&quot;更新后：&#123;my_dict&#125;&quot;)# 元素删除score = my_dict.pop(&quot;ma&quot;)print(f&quot;移除后：&#123;my_dict&#125;&quot;)# 清空元素my_dict.clear()print(f&quot;清空后：&#123;my_dict&#125;&quot;)# 获取全部的keymy_dict = &#123;&quot;ma&quot;:99,&quot;shao&quot;:88,&quot;xuan&quot;:77&#125;keys = my_dict.keys()print(keys)# 遍历字典# 方式一通过key来完成遍历for key in keys:print(f&quot;字典的key：&#123;key&#125;&quot;)print(f&quot;字典的value是：&#123;my_dict[key]&#125;&quot;)# 方式二 直接对字典进行for循环 ，每一次循环都是直接得到keyfor key in my_dict:print(f&quot;字典的key：&#123;key&#125;&quot;)print(f&quot;字典的value是：&#123;my_dict[key]&#125;&quot;)# 统计字典内的元素数量num = len(my_dict)print(num)# 字符串大小比较print(f&quot;abd大于abc，结果：&#123;&#x27;abd&#x27; &gt; &#x27;abc&#x27;&#125;&quot;)# key1 比较 key2# print(f&quot;&#123;key1 &gt; key2&#125;&quot;)# 演示多个变量，接受多个返回值def test_return():return 1,&quot;hello&quot;,Truex,y,z = test_return()print(x)print(y)print(z)# 演示多张传参的形式def user_info(name,age,gender):print(f&quot;姓名：&#123;name&#125;，年龄：&#123;age&#125;，性别：&#123;gender&#125;&quot;)# 位置参数user_info(&#x27;小米&#x27;,20,&#x27;男&#x27;)# 关键字参数user_info(name=&#x27;小王&#x27;,age=11,gender=&#x27;女&#x27;)user_info(age=10,gender=&#x27;女&#x27;,name=&#x27;笑笑&#x27;)user_info(&#x27;天天&#x27;,gender=&#x27;女&#x27;,age=9)# 缺省参数def user_info(name,age,gender=&#x27;男&#x27;):print(f&quot;姓名：&#123;name&#125;，年龄：&#123;age&#125;，行捏：&#123;gender&#125;&quot;)user_info(&#x27;小天&#x27;,13,&#x27;男&#x27;)# 位置不定长*号def user_info(*args):print(f&quot;类型：&#123;type(args)&#125;,内容：&#123;args&#125;&quot;)user_info(1,2,3,&#x27;小米&#x27;,&#x27;难哄&#x27;)# 关键字不定长**号def user_info(**kwargs):print(f&quot;类型：&#123;type(kwargs)&#125;,内容：&#123;kwargs&#125;&quot;)user_info(name=&#x27;ma&#x27;,age=20,gender=&#x27;nanhai&#x27;)# 函数作为参数传递def test_fund(compute):result = compute(1,2)   # 确定compute是函数print(f&quot;compute参数的类型：&#123;type(compute)&#125;&quot;)print(result)def compute(x,y):return x + ytest_fund(compute)# lambda匿名函数def test_fund(compute):result = compute(1,2)print(f&quot;结果：&#123;result&#125;&quot;)test_fund(lambda x,y:x +y)# 演示对文件的读取# 打开文件f = open(&quot;D:/Python/PycharmProjects/pythonProject/练习/测试.txt&quot;,&quot;r&quot;,encoding=&quot;UTF-8&quot;)print(type(f))# 读取文件  - readprint(f&quot;读取两个字节的结果：&#123;f.read(2)&#125;&quot;)print(f&quot;读取全部的结果：&#123;f.read()&#125;&quot;)# 读取文件 - readlines()lines = f.readlines()       # 前面注释，紧接着前面print(f&quot;lines对象的类型：&#123;type(lines)&#125;&quot;)print(f&quot;lines对象的内容：&#123;lines&#125;&quot;)# 读取文件 - readline()line1 = f.readline()line2 = f.readline()line3 = f.readline()print(f&quot;第一行：&#123;line1&#125;&quot;)print(f&quot;第二行：&#123;line2&#125;&quot;)print(f&quot;第三行：&#123;line3&#125;&quot;)# for循环读取文件行for line in f:print(line)# 文件的关闭# f.close()# time.sleep(500000)with open(&quot;D:/Python/PycharmProjects/pythonProject/练习/测试.txt&quot;):for line in f:print(line)# time.sleep(500000)f.close()# 演示文件的写入#open(&quot;D:/Python/PycharmProjects/练习/ma.txt&quot;,&quot;w&quot;,encoding=&quot;UTF-8&quot;).close()#f.write(&quot;hello world&quot;)#f.flush()#f.close()# 捕获异常# 基本捕获语法try:f = open(&quot;D:/abc.txt&quot;,&quot;r&quot;,encoding=&quot;UTF-8&quot;)except:print(&quot;出现异常，因为文件不存在，我将open的模式，改为w模式去打开&quot;)f = open(&quot;D:/abc.txt&quot;,&quot;w&quot;,encoding=&quot;UTF-8&quot;)# 捕获特定的异常try:print(name)except NameError as e:print(&quot;出现了变量未定义的异常&quot;)print(e)# 捕获多个异常try:1 / 0print(name)except (NameError,ZeroDivisionError) as e:print(&quot;出现了变量未定义 或者 除以0的异常错误&quot;)# 未正确# 捕获所有异常try:print(name)1 / 0except Exception as e:print(&quot;出现异常&quot;)else:print(&quot;没有异常&quot;)finally:print(&quot;我是finally，有没有异常都要执行&quot;)f.close()# # 演示异常的传递性# # 定义一个出现异常的方法# def func1():#     print(&quot;func1 开始执行&quot;)#     num = 1 / 0#     print(&quot;func1 结束执行&quot;)# # 定义一个无异常的方法，调用上面的方法# def func2():#     print(&quot;func2 开始执行&quot;)#     func1()#     print(&quot;func2 结束执行&quot;)# # 定义一个方法，调用上面的方法# def main():#     try:#           func2()#     except Exception as e:#           print(f&quot;出现异常，&#123;e&#125;&quot;)# main()# # python1的模块导入# # 使用import导入time模块使用sleep功能（函数）# import time     # 导入Python内置的time模块（time.py这个代码文件）# pritn(&quot;你好&quot;)# time.sleep(5)   # 通过.就可以使用模块内部的全部功能（类，函数，变量）# print(&quot;你好&quot;)# # 使用form导入time的sleep功能（函数）# from time import sleep# pritn(&quot;你好&quot;)# sleep(5)# print(&quot;你好&quot;)# # 使用*导入time的sleep功能（函数）# from time import *    # *表示全部的意思# pritn(&quot;你好&quot;)# sleep(5)# print(&quot;你好&quot;)# 使用as给特定功能加上别名# from time import t# pritn(&quot;你好&quot;)# t.sleep(5)# print(&quot;你好&quot;)# from time import sleep as sl# print(&quot;你好&quot;)# sl(5)# print(&quot;我好&quot;)# # 演示自定义模块# # 导入自定义模块使用# # import 文件 import test# from 测试 import test# test(1,2)# # 导入不同模块的同名功能# from 文件1 import test# from 文件2 import test# test(1,2)# #__main__变量# from 文件 import test# #__all__变量# from 文件 import *# test_a(1,2)# test_b(1,2)\n"},{"title":"你好！ 世界！","url":"/2025/05/19/%E5%B0%8F%E5%86%99%E4%B8%80%E7%AF%87/","content":"Welcome to 马少宣! This is my first plog. \nQuick Start学校\n石家庄学院\n\n专业\n物联网工程\n\n年级\n2023级\n\n"}]